// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com/daml/ledger/api/v1/active_contracts_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Daml.Ledger.Api.V1 {

  /// <summary>Holder for reflection information generated from com/daml/ledger/api/v1/active_contracts_service.proto</summary>
  public static partial class ActiveContractsServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for com/daml/ledger/api/v1/active_contracts_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ActiveContractsServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVjb20vZGFtbC9sZWRnZXIvYXBpL3YxL2FjdGl2ZV9jb250cmFjdHNfc2Vy",
            "dmljZS5wcm90bxIWY29tLmRhbWwubGVkZ2VyLmFwaS52MRoiY29tL2RhbWwv",
            "bGVkZ2VyL2FwaS92MS9ldmVudC5wcm90bxovY29tL2RhbWwvbGVkZ2VyL2Fw",
            "aS92MS90cmFuc2FjdGlvbl9maWx0ZXIucHJvdG8aKmNvbS9kYW1sL2xlZGdl",
            "ci9hcGkvdjEvdHJhY2VfY29udGV4dC5wcm90byK4AQoZR2V0QWN0aXZlQ29u",
            "dHJhY3RzUmVxdWVzdBIRCglsZWRnZXJfaWQYASABKAkSOQoGZmlsdGVyGAIg",
            "ASgLMikuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5UcmFuc2FjdGlvbkZpbHRl",
            "chIPCgd2ZXJib3NlGAMgASgIEjwKDXRyYWNlX2NvbnRleHQY6AcgASgLMiQu",
            "Y29tLmRhbWwubGVkZ2VyLmFwaS52MS5UcmFjZUNvbnRleHQivwEKGkdldEFj",
            "dGl2ZUNvbnRyYWN0c1Jlc3BvbnNlEg4KBm9mZnNldBgBIAEoCRITCgt3b3Jr",
            "Zmxvd19pZBgCIAEoCRI+ChBhY3RpdmVfY29udHJhY3RzGAMgAygLMiQuY29t",
            "LmRhbWwubGVkZ2VyLmFwaS52MS5DcmVhdGVkRXZlbnQSPAoNdHJhY2VfY29u",
            "dGV4dBjoByABKAsyJC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLlRyYWNlQ29u",
            "dGV4dDKXAQoWQWN0aXZlQ29udHJhY3RzU2VydmljZRJ9ChJHZXRBY3RpdmVD",
            "b250cmFjdHMSMS5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLkdldEFjdGl2ZUNv",
            "bnRyYWN0c1JlcXVlc3QaMi5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLkdldEFj",
            "dGl2ZUNvbnRyYWN0c1Jlc3BvbnNlMAFCUwoWY29tLmRhbWwubGVkZ2VyLmFw",
            "aS52MUIgQWN0aXZlQ29udHJhY3RzU2VydmljZU91dGVyQ2xhc3OqAhZDb20u",
            "RGFtbC5MZWRnZXIuQXBpLlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Daml.Ledger.Api.V1.EventReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TransactionFilterReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TraceContextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetActiveContractsRequest), global::Com.Daml.Ledger.Api.V1.GetActiveContractsRequest.Parser, new[]{ "LedgerId", "Filter", "Verbose", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetActiveContractsResponse), global::Com.Daml.Ledger.Api.V1.GetActiveContractsResponse.Parser, new[]{ "Offset", "WorkflowId", "ActiveContracts", "TraceContext" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetActiveContractsRequest : pb::IMessage<GetActiveContractsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetActiveContractsRequest> _parser = new pb::MessageParser<GetActiveContractsRequest>(() => new GetActiveContractsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetActiveContractsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ActiveContractsServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsRequest(GetActiveContractsRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      verbose_ = other.verbose_;
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsRequest Clone() {
      return new GetActiveContractsRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private global::Com.Daml.Ledger.Api.V1.TransactionFilter filter_;
    /// <summary>
    /// Templates to include in the served snapshot, per party.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TransactionFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "verbose" field.</summary>
    public const int VerboseFieldNumber = 3;
    private bool verbose_;
    /// <summary>
    /// If enabled, values served over the API will contain more information than strictly necessary to interpret the data.
    /// In particular, setting the verbose flag to true triggers the ledger to include labels for record fields.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Verbose {
      get { return verbose_; }
      set {
        verbose_ = value;
      }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetActiveContractsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetActiveContractsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (Verbose != other.Verbose) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (Verbose != false) hash ^= Verbose.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (filter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (Verbose != false) {
        output.WriteRawTag(24);
        output.WriteBool(Verbose);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (filter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (Verbose != false) {
        output.WriteRawTag(24);
        output.WriteBool(Verbose);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (Verbose != false) {
        size += 1 + 1;
      }
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetActiveContractsRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.Verbose != false) {
        Verbose = other.Verbose;
      }
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            if (filter_ == null) {
              Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 24: {
            Verbose = input.ReadBool();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            if (filter_ == null) {
              Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 24: {
            Verbose = input.ReadBool();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetActiveContractsResponse : pb::IMessage<GetActiveContractsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetActiveContractsResponse> _parser = new pb::MessageParser<GetActiveContractsResponse>(() => new GetActiveContractsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetActiveContractsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ActiveContractsServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsResponse(GetActiveContractsResponse other) : this() {
      offset_ = other.offset_;
      workflowId_ = other.workflowId_;
      activeContracts_ = other.activeContracts_.Clone();
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetActiveContractsResponse Clone() {
      return new GetActiveContractsResponse(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private string offset_ = "";
    /// <summary>
    /// Included in the last message.
    /// The client should start consuming the transactions endpoint with this offset.
    /// The format of this field is described in ``ledger_offset.proto``.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 2;
    private string workflowId_ = "";
    /// <summary>
    /// The workflow that created the contracts.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_contracts" field.</summary>
    public const int ActiveContractsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.CreatedEvent> _repeated_activeContracts_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Daml.Ledger.Api.V1.CreatedEvent.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.CreatedEvent> activeContracts_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.CreatedEvent>();
    /// <summary>
    /// The list of contracts that were introduced by the workflow with ``workflow_id`` at the offset.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.CreatedEvent> ActiveContracts {
      get { return activeContracts_; }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Zipkin trace context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetActiveContractsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetActiveContractsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (WorkflowId != other.WorkflowId) return false;
      if(!activeContracts_.Equals(other.activeContracts_)) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      hash ^= activeContracts_.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Offset);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      activeContracts_.WriteTo(output, _repeated_activeContracts_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Offset);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      activeContracts_.WriteTo(ref output, _repeated_activeContracts_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Offset);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      size += activeContracts_.CalculateSize(_repeated_activeContracts_codec);
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetActiveContractsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      activeContracts_.Add(other.activeContracts_);
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Offset = input.ReadString();
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
          case 26: {
            activeContracts_.AddEntriesFrom(input, _repeated_activeContracts_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Offset = input.ReadString();
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
          case 26: {
            activeContracts_.AddEntriesFrom(ref input, _repeated_activeContracts_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
