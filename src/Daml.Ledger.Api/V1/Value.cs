// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com/daml/ledger/api/v1/value.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Daml.Ledger.Api.V1 {

  /// <summary>Holder for reflection information generated from com/daml/ledger/api/v1/value.proto</summary>
  public static partial class ValueReflection {

    #region Descriptor
    /// <summary>File descriptor for com/daml/ledger/api/v1/value.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ValueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJjb20vZGFtbC9sZWRnZXIvYXBpL3YxL3ZhbHVlLnByb3RvEhZjb20uZGFt",
            "bC5sZWRnZXIuYXBpLnYxGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8i",
            "pgQKBVZhbHVlEjAKBnJlY29yZBgBIAEoCzIeLmNvbS5kYW1sLmxlZGdlci5h",
            "cGkudjEuUmVjb3JkSAASMgoHdmFyaWFudBgCIAEoCzIfLmNvbS5kYW1sLmxl",
            "ZGdlci5hcGkudjEuVmFyaWFudEgAEhUKC2NvbnRyYWN0X2lkGAMgASgJSAAS",
            "LAoEbGlzdBgEIAEoCzIcLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuTGlzdEgA",
            "EhMKBWludDY0GAUgASgSQgIwAUgAEhEKB251bWVyaWMYBiABKAlIABIOCgR0",
            "ZXh0GAggASgJSAASFwoJdGltZXN0YW1wGAkgASgQQgIwAUgAEg8KBXBhcnR5",
            "GAsgASgJSAASDgoEYm9vbBgMIAEoCEgAEiYKBHVuaXQYDSABKAsyFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHlIABIOCgRkYXRlGA4gASgFSAASNAoIb3B0aW9u",
            "YWwYDyABKAsyIC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLk9wdGlvbmFsSAAS",
            "KgoDbWFwGBAgASgLMhsuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5NYXBIABIs",
            "CgRlbnVtGBEgASgLMhwuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5FbnVtSAAS",
            "MQoHZ2VuX21hcBgSIAEoCzIeLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuR2Vu",
            "TWFwSABCBQoDU3VtInQKBlJlY29yZBI1CglyZWNvcmRfaWQYASABKAsyIi5j",
            "b20uZGFtbC5sZWRnZXIuYXBpLnYxLklkZW50aWZpZXISMwoGZmllbGRzGAIg",
            "AygLMiMuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5SZWNvcmRGaWVsZCJKCgtS",
            "ZWNvcmRGaWVsZBINCgVsYWJlbBgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLmNv",
            "bS5kYW1sLmxlZGdlci5hcGkudjEuVmFsdWUiUAoKSWRlbnRpZmllchISCgpw",
            "YWNrYWdlX2lkGAEgASgJEhMKC21vZHVsZV9uYW1lGAMgASgJEhMKC2VudGl0",
            "eV9uYW1lGAQgASgJSgQIAhADIoQBCgdWYXJpYW50EjYKCnZhcmlhbnRfaWQY",
            "ASABKAsyIi5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLklkZW50aWZpZXISEwoL",
            "Y29uc3RydWN0b3IYAiABKAkSLAoFdmFsdWUYAyABKAsyHS5jb20uZGFtbC5s",
            "ZWRnZXIuYXBpLnYxLlZhbHVlIlAKBEVudW0SMwoHZW51bV9pZBgBIAEoCzIi",
            "LmNvbS5kYW1sLmxlZGdlci5hcGkudjEuSWRlbnRpZmllchITCgtjb25zdHJ1",
            "Y3RvchgCIAEoCSI3CgRMaXN0Ei8KCGVsZW1lbnRzGAEgAygLMh0uY29tLmRh",
            "bWwubGVkZ2VyLmFwaS52MS5WYWx1ZSI4CghPcHRpb25hbBIsCgV2YWx1ZRgB",
            "IAEoCzIdLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuVmFsdWUifQoDTWFwEjIK",
            "B2VudHJpZXMYASADKAsyIS5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLk1hcC5F",
            "bnRyeRpCCgVFbnRyeRILCgNrZXkYASABKAkSLAoFdmFsdWUYAiABKAsyHS5j",
            "b20uZGFtbC5sZWRnZXIuYXBpLnYxLlZhbHVlIqIBCgZHZW5NYXASNQoHZW50",
            "cmllcxgBIAMoCzIkLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuR2VuTWFwLkVu",
            "dHJ5GmEKBUVudHJ5EioKA2tleRgBIAEoCzIdLmNvbS5kYW1sLmxlZGdlci5h",
            "cGkudjEuVmFsdWUSLAoFdmFsdWUYAiABKAsyHS5jb20uZGFtbC5sZWRnZXIu",
            "YXBpLnYxLlZhbHVlQkIKFmNvbS5kYW1sLmxlZGdlci5hcGkudjFCD1ZhbHVl",
            "T3V0ZXJDbGFzc6oCFkNvbS5EYW1sLkxlZGdlci5BcGkuVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Value), global::Com.Daml.Ledger.Api.V1.Value.Parser, new[]{ "Record", "Variant", "ContractId", "List", "Int64", "Numeric", "Text", "Timestamp", "Party", "Bool", "Unit", "Date", "Optional", "Map", "Enum", "GenMap" }, new[]{ "Sum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Record), global::Com.Daml.Ledger.Api.V1.Record.Parser, new[]{ "RecordId", "Fields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.RecordField), global::Com.Daml.Ledger.Api.V1.RecordField.Parser, new[]{ "Label", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Identifier), global::Com.Daml.Ledger.Api.V1.Identifier.Parser, new[]{ "PackageId", "ModuleName", "EntityName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Variant), global::Com.Daml.Ledger.Api.V1.Variant.Parser, new[]{ "VariantId", "Constructor", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Enum), global::Com.Daml.Ledger.Api.V1.Enum.Parser, new[]{ "EnumId", "Constructor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.List), global::Com.Daml.Ledger.Api.V1.List.Parser, new[]{ "Elements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Optional), global::Com.Daml.Ledger.Api.V1.Optional.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Map), global::Com.Daml.Ledger.Api.V1.Map.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Map.Types.Entry), global::Com.Daml.Ledger.Api.V1.Map.Types.Entry.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GenMap), global::Com.Daml.Ledger.Api.V1.GenMap.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry), global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry.Parser, new[]{ "Key", "Value" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Encodes values that the ledger accepts as command arguments and emits as contract arguments.
  ///
  /// The values encoding use different four classes of strings as identifiers. Those classes are
  /// defined as follow:
  /// - NameStrings are strings that match the regexp ``[A-Za-z\$_][A-Za-z0-9\$_]*``.
  /// - PackageIdStrings are strings that match the regexp ``[A-Za-z0-9\-_ ]+``.
  /// - PartyIdStrings are strings that match the regexp ``[A-Za-z0-9:\-_ ]+``.
  /// - LedgerStrings are strings that match the regexp ``[A-Za-z0-9#:\-_/ ]+``.
  /// </summary>
  public sealed partial class Value : pb::IMessage<Value>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Value> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value(Value other) : this() {
      switch (other.SumCase) {
        case SumOneofCase.Record:
          Record = other.Record.Clone();
          break;
        case SumOneofCase.Variant:
          Variant = other.Variant.Clone();
          break;
        case SumOneofCase.ContractId:
          ContractId = other.ContractId;
          break;
        case SumOneofCase.List:
          List = other.List.Clone();
          break;
        case SumOneofCase.Int64:
          Int64 = other.Int64;
          break;
        case SumOneofCase.Numeric:
          Numeric = other.Numeric;
          break;
        case SumOneofCase.Text:
          Text = other.Text;
          break;
        case SumOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
        case SumOneofCase.Party:
          Party = other.Party;
          break;
        case SumOneofCase.Bool:
          Bool = other.Bool;
          break;
        case SumOneofCase.Unit:
          Unit = other.Unit.Clone();
          break;
        case SumOneofCase.Date:
          Date = other.Date;
          break;
        case SumOneofCase.Optional:
          Optional = other.Optional.Clone();
          break;
        case SumOneofCase.Map:
          Map = other.Map.Clone();
          break;
        case SumOneofCase.Enum:
          Enum = other.Enum.Clone();
          break;
        case SumOneofCase.GenMap:
          GenMap = other.GenMap.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value Clone() {
      return new Value(this);
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Record Record {
      get { return sumCase_ == SumOneofCase.Record ? (global::Com.Daml.Ledger.Api.V1.Record) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Record;
      }
    }

    /// <summary>Field number for the "variant" field.</summary>
    public const int VariantFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Variant Variant {
      get { return sumCase_ == SumOneofCase.Variant ? (global::Com.Daml.Ledger.Api.V1.Variant) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Variant;
      }
    }

    /// <summary>Field number for the "contract_id" field.</summary>
    public const int ContractIdFieldNumber = 3;
    /// <summary>
    /// Identifier of an on-ledger contract. Commands which reference an unknown or already archived contract ID will fail.
    /// Must be a valid LedgerString.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return sumCase_ == SumOneofCase.ContractId ? (string) sum_ : ""; }
      set {
        sum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sumCase_ = SumOneofCase.ContractId;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 4;
    /// <summary>
    /// Represents a homogeneous list of values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.List List {
      get { return sumCase_ == SumOneofCase.List ? (global::Com.Daml.Ledger.Api.V1.List) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.List;
      }
    }

    /// <summary>Field number for the "int64" field.</summary>
    public const int Int64FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64 {
      get { return sumCase_ == SumOneofCase.Int64 ? (long) sum_ : 0L; }
      set {
        sum_ = value;
        sumCase_ = SumOneofCase.Int64;
      }
    }

    /// <summary>Field number for the "numeric" field.</summary>
    public const int NumericFieldNumber = 6;
    /// <summary>
    /// A Numeric, that is a decimal value with precision 38 (at most 38 significant digits) and a
    /// scale between 0 and 37 (significant digits on the right of the decimal point).
    /// The field has to match the regex
    ///   [+-]?\d{1,38}(.\d{0,37})?
    /// and should be representable by a Numeric without loss of precision.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Numeric {
      get { return sumCase_ == SumOneofCase.Numeric ? (string) sum_ : ""; }
      set {
        sum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sumCase_ = SumOneofCase.Numeric;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 8;
    /// <summary>
    /// A string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return sumCase_ == SumOneofCase.Text ? (string) sum_ : ""; }
      set {
        sum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sumCase_ = SumOneofCase.Text;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 9;
    /// <summary>
    /// Microseconds since the UNIX epoch. Can go backwards. Fixed
    /// since the vast majority of values will be greater than
    /// 2^28, since currently the number of microseconds since the
    /// epoch is greater than that. Range: 0001-01-01T00:00:00Z to
    /// 9999-12-31T23:59:59.999999Z, so that we can convert to/from
    /// https://www.ietf.org/rfc/rfc3339.txt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return sumCase_ == SumOneofCase.Timestamp ? (long) sum_ : 0L; }
      set {
        sum_ = value;
        sumCase_ = SumOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "party" field.</summary>
    public const int PartyFieldNumber = 11;
    /// <summary>
    /// An agent operating on the ledger.
    /// Must be a valid PartyIdString.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Party {
      get { return sumCase_ == SumOneofCase.Party ? (string) sum_ : ""; }
      set {
        sum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sumCase_ = SumOneofCase.Party;
      }
    }

    /// <summary>Field number for the "bool" field.</summary>
    public const int BoolFieldNumber = 12;
    /// <summary>
    /// True or false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bool {
      get { return sumCase_ == SumOneofCase.Bool ? (bool) sum_ : false; }
      set {
        sum_ = value;
        sumCase_ = SumOneofCase.Bool;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 13;
    /// <summary>
    /// This value is used for example for choices that don't take any arguments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty Unit {
      get { return sumCase_ == SumOneofCase.Unit ? (global::Google.Protobuf.WellKnownTypes.Empty) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Unit;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 14;
    /// <summary>
    /// Days since the unix epoch. Can go backwards. Limited from
    /// 0001-01-01 to 9999-12-31, also to be compatible with
    /// https://www.ietf.org/rfc/rfc3339.txt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Date {
      get { return sumCase_ == SumOneofCase.Date ? (int) sum_ : 0; }
      set {
        sum_ = value;
        sumCase_ = SumOneofCase.Date;
      }
    }

    /// <summary>Field number for the "optional" field.</summary>
    public const int OptionalFieldNumber = 15;
    /// <summary>
    /// The Optional type, None or Some
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Optional Optional {
      get { return sumCase_ == SumOneofCase.Optional ? (global::Com.Daml.Ledger.Api.V1.Optional) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Optional;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 16;
    /// <summary>
    /// The Map type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Map Map {
      get { return sumCase_ == SumOneofCase.Map ? (global::Com.Daml.Ledger.Api.V1.Map) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Map;
      }
    }

    /// <summary>Field number for the "enum" field.</summary>
    public const int EnumFieldNumber = 17;
    /// <summary>
    /// The Enum type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Enum Enum {
      get { return sumCase_ == SumOneofCase.Enum ? (global::Com.Daml.Ledger.Api.V1.Enum) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Enum;
      }
    }

    /// <summary>Field number for the "gen_map" field.</summary>
    public const int GenMapFieldNumber = 18;
    /// <summary>
    /// The GenMap type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.GenMap GenMap {
      get { return sumCase_ == SumOneofCase.GenMap ? (global::Com.Daml.Ledger.Api.V1.GenMap) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.GenMap;
      }
    }

    private object sum_;
    /// <summary>Enum of possible cases for the "Sum" oneof.</summary>
    public enum SumOneofCase {
      None = 0,
      Record = 1,
      Variant = 2,
      ContractId = 3,
      List = 4,
      Int64 = 5,
      Numeric = 6,
      Text = 8,
      Timestamp = 9,
      Party = 11,
      Bool = 12,
      Unit = 13,
      Date = 14,
      Optional = 15,
      Map = 16,
      Enum = 17,
      GenMap = 18,
    }
    private SumOneofCase sumCase_ = SumOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SumOneofCase SumCase {
      get { return sumCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSum() {
      sumCase_ = SumOneofCase.None;
      sum_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Value);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Value other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Record, other.Record)) return false;
      if (!object.Equals(Variant, other.Variant)) return false;
      if (ContractId != other.ContractId) return false;
      if (!object.Equals(List, other.List)) return false;
      if (Int64 != other.Int64) return false;
      if (Numeric != other.Numeric) return false;
      if (Text != other.Text) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Party != other.Party) return false;
      if (Bool != other.Bool) return false;
      if (!object.Equals(Unit, other.Unit)) return false;
      if (Date != other.Date) return false;
      if (!object.Equals(Optional, other.Optional)) return false;
      if (!object.Equals(Map, other.Map)) return false;
      if (!object.Equals(Enum, other.Enum)) return false;
      if (!object.Equals(GenMap, other.GenMap)) return false;
      if (SumCase != other.SumCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sumCase_ == SumOneofCase.Record) hash ^= Record.GetHashCode();
      if (sumCase_ == SumOneofCase.Variant) hash ^= Variant.GetHashCode();
      if (sumCase_ == SumOneofCase.ContractId) hash ^= ContractId.GetHashCode();
      if (sumCase_ == SumOneofCase.List) hash ^= List.GetHashCode();
      if (sumCase_ == SumOneofCase.Int64) hash ^= Int64.GetHashCode();
      if (sumCase_ == SumOneofCase.Numeric) hash ^= Numeric.GetHashCode();
      if (sumCase_ == SumOneofCase.Text) hash ^= Text.GetHashCode();
      if (sumCase_ == SumOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (sumCase_ == SumOneofCase.Party) hash ^= Party.GetHashCode();
      if (sumCase_ == SumOneofCase.Bool) hash ^= Bool.GetHashCode();
      if (sumCase_ == SumOneofCase.Unit) hash ^= Unit.GetHashCode();
      if (sumCase_ == SumOneofCase.Date) hash ^= Date.GetHashCode();
      if (sumCase_ == SumOneofCase.Optional) hash ^= Optional.GetHashCode();
      if (sumCase_ == SumOneofCase.Map) hash ^= Map.GetHashCode();
      if (sumCase_ == SumOneofCase.Enum) hash ^= Enum.GetHashCode();
      if (sumCase_ == SumOneofCase.GenMap) hash ^= GenMap.GetHashCode();
      hash ^= (int) sumCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sumCase_ == SumOneofCase.Record) {
        output.WriteRawTag(10);
        output.WriteMessage(Record);
      }
      if (sumCase_ == SumOneofCase.Variant) {
        output.WriteRawTag(18);
        output.WriteMessage(Variant);
      }
      if (sumCase_ == SumOneofCase.ContractId) {
        output.WriteRawTag(26);
        output.WriteString(ContractId);
      }
      if (sumCase_ == SumOneofCase.List) {
        output.WriteRawTag(34);
        output.WriteMessage(List);
      }
      if (sumCase_ == SumOneofCase.Int64) {
        output.WriteRawTag(40);
        output.WriteSInt64(Int64);
      }
      if (sumCase_ == SumOneofCase.Numeric) {
        output.WriteRawTag(50);
        output.WriteString(Numeric);
      }
      if (sumCase_ == SumOneofCase.Text) {
        output.WriteRawTag(66);
        output.WriteString(Text);
      }
      if (sumCase_ == SumOneofCase.Timestamp) {
        output.WriteRawTag(73);
        output.WriteSFixed64(Timestamp);
      }
      if (sumCase_ == SumOneofCase.Party) {
        output.WriteRawTag(90);
        output.WriteString(Party);
      }
      if (sumCase_ == SumOneofCase.Bool) {
        output.WriteRawTag(96);
        output.WriteBool(Bool);
      }
      if (sumCase_ == SumOneofCase.Unit) {
        output.WriteRawTag(106);
        output.WriteMessage(Unit);
      }
      if (sumCase_ == SumOneofCase.Date) {
        output.WriteRawTag(112);
        output.WriteInt32(Date);
      }
      if (sumCase_ == SumOneofCase.Optional) {
        output.WriteRawTag(122);
        output.WriteMessage(Optional);
      }
      if (sumCase_ == SumOneofCase.Map) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Map);
      }
      if (sumCase_ == SumOneofCase.Enum) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Enum);
      }
      if (sumCase_ == SumOneofCase.GenMap) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GenMap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sumCase_ == SumOneofCase.Record) {
        output.WriteRawTag(10);
        output.WriteMessage(Record);
      }
      if (sumCase_ == SumOneofCase.Variant) {
        output.WriteRawTag(18);
        output.WriteMessage(Variant);
      }
      if (sumCase_ == SumOneofCase.ContractId) {
        output.WriteRawTag(26);
        output.WriteString(ContractId);
      }
      if (sumCase_ == SumOneofCase.List) {
        output.WriteRawTag(34);
        output.WriteMessage(List);
      }
      if (sumCase_ == SumOneofCase.Int64) {
        output.WriteRawTag(40);
        output.WriteSInt64(Int64);
      }
      if (sumCase_ == SumOneofCase.Numeric) {
        output.WriteRawTag(50);
        output.WriteString(Numeric);
      }
      if (sumCase_ == SumOneofCase.Text) {
        output.WriteRawTag(66);
        output.WriteString(Text);
      }
      if (sumCase_ == SumOneofCase.Timestamp) {
        output.WriteRawTag(73);
        output.WriteSFixed64(Timestamp);
      }
      if (sumCase_ == SumOneofCase.Party) {
        output.WriteRawTag(90);
        output.WriteString(Party);
      }
      if (sumCase_ == SumOneofCase.Bool) {
        output.WriteRawTag(96);
        output.WriteBool(Bool);
      }
      if (sumCase_ == SumOneofCase.Unit) {
        output.WriteRawTag(106);
        output.WriteMessage(Unit);
      }
      if (sumCase_ == SumOneofCase.Date) {
        output.WriteRawTag(112);
        output.WriteInt32(Date);
      }
      if (sumCase_ == SumOneofCase.Optional) {
        output.WriteRawTag(122);
        output.WriteMessage(Optional);
      }
      if (sumCase_ == SumOneofCase.Map) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Map);
      }
      if (sumCase_ == SumOneofCase.Enum) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Enum);
      }
      if (sumCase_ == SumOneofCase.GenMap) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GenMap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sumCase_ == SumOneofCase.Record) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Record);
      }
      if (sumCase_ == SumOneofCase.Variant) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variant);
      }
      if (sumCase_ == SumOneofCase.ContractId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (sumCase_ == SumOneofCase.List) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (sumCase_ == SumOneofCase.Int64) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Int64);
      }
      if (sumCase_ == SumOneofCase.Numeric) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Numeric);
      }
      if (sumCase_ == SumOneofCase.Text) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (sumCase_ == SumOneofCase.Timestamp) {
        size += 1 + 8;
      }
      if (sumCase_ == SumOneofCase.Party) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Party);
      }
      if (sumCase_ == SumOneofCase.Bool) {
        size += 1 + 1;
      }
      if (sumCase_ == SumOneofCase.Unit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unit);
      }
      if (sumCase_ == SumOneofCase.Date) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Date);
      }
      if (sumCase_ == SumOneofCase.Optional) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Optional);
      }
      if (sumCase_ == SumOneofCase.Map) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      if (sumCase_ == SumOneofCase.Enum) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Enum);
      }
      if (sumCase_ == SumOneofCase.GenMap) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GenMap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Value other) {
      if (other == null) {
        return;
      }
      switch (other.SumCase) {
        case SumOneofCase.Record:
          if (Record == null) {
            Record = new global::Com.Daml.Ledger.Api.V1.Record();
          }
          Record.MergeFrom(other.Record);
          break;
        case SumOneofCase.Variant:
          if (Variant == null) {
            Variant = new global::Com.Daml.Ledger.Api.V1.Variant();
          }
          Variant.MergeFrom(other.Variant);
          break;
        case SumOneofCase.ContractId:
          ContractId = other.ContractId;
          break;
        case SumOneofCase.List:
          if (List == null) {
            List = new global::Com.Daml.Ledger.Api.V1.List();
          }
          List.MergeFrom(other.List);
          break;
        case SumOneofCase.Int64:
          Int64 = other.Int64;
          break;
        case SumOneofCase.Numeric:
          Numeric = other.Numeric;
          break;
        case SumOneofCase.Text:
          Text = other.Text;
          break;
        case SumOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
        case SumOneofCase.Party:
          Party = other.Party;
          break;
        case SumOneofCase.Bool:
          Bool = other.Bool;
          break;
        case SumOneofCase.Unit:
          if (Unit == null) {
            Unit = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          Unit.MergeFrom(other.Unit);
          break;
        case SumOneofCase.Date:
          Date = other.Date;
          break;
        case SumOneofCase.Optional:
          if (Optional == null) {
            Optional = new global::Com.Daml.Ledger.Api.V1.Optional();
          }
          Optional.MergeFrom(other.Optional);
          break;
        case SumOneofCase.Map:
          if (Map == null) {
            Map = new global::Com.Daml.Ledger.Api.V1.Map();
          }
          Map.MergeFrom(other.Map);
          break;
        case SumOneofCase.Enum:
          if (Enum == null) {
            Enum = new global::Com.Daml.Ledger.Api.V1.Enum();
          }
          Enum.MergeFrom(other.Enum);
          break;
        case SumOneofCase.GenMap:
          if (GenMap == null) {
            GenMap = new global::Com.Daml.Ledger.Api.V1.GenMap();
          }
          GenMap.MergeFrom(other.GenMap);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Com.Daml.Ledger.Api.V1.Record subBuilder = new global::Com.Daml.Ledger.Api.V1.Record();
            if (sumCase_ == SumOneofCase.Record) {
              subBuilder.MergeFrom(Record);
            }
            input.ReadMessage(subBuilder);
            Record = subBuilder;
            break;
          }
          case 18: {
            global::Com.Daml.Ledger.Api.V1.Variant subBuilder = new global::Com.Daml.Ledger.Api.V1.Variant();
            if (sumCase_ == SumOneofCase.Variant) {
              subBuilder.MergeFrom(Variant);
            }
            input.ReadMessage(subBuilder);
            Variant = subBuilder;
            break;
          }
          case 26: {
            ContractId = input.ReadString();
            break;
          }
          case 34: {
            global::Com.Daml.Ledger.Api.V1.List subBuilder = new global::Com.Daml.Ledger.Api.V1.List();
            if (sumCase_ == SumOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 40: {
            Int64 = input.ReadSInt64();
            break;
          }
          case 50: {
            Numeric = input.ReadString();
            break;
          }
          case 66: {
            Text = input.ReadString();
            break;
          }
          case 73: {
            Timestamp = input.ReadSFixed64();
            break;
          }
          case 90: {
            Party = input.ReadString();
            break;
          }
          case 96: {
            Bool = input.ReadBool();
            break;
          }
          case 106: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (sumCase_ == SumOneofCase.Unit) {
              subBuilder.MergeFrom(Unit);
            }
            input.ReadMessage(subBuilder);
            Unit = subBuilder;
            break;
          }
          case 112: {
            Date = input.ReadInt32();
            break;
          }
          case 122: {
            global::Com.Daml.Ledger.Api.V1.Optional subBuilder = new global::Com.Daml.Ledger.Api.V1.Optional();
            if (sumCase_ == SumOneofCase.Optional) {
              subBuilder.MergeFrom(Optional);
            }
            input.ReadMessage(subBuilder);
            Optional = subBuilder;
            break;
          }
          case 130: {
            global::Com.Daml.Ledger.Api.V1.Map subBuilder = new global::Com.Daml.Ledger.Api.V1.Map();
            if (sumCase_ == SumOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 138: {
            global::Com.Daml.Ledger.Api.V1.Enum subBuilder = new global::Com.Daml.Ledger.Api.V1.Enum();
            if (sumCase_ == SumOneofCase.Enum) {
              subBuilder.MergeFrom(Enum);
            }
            input.ReadMessage(subBuilder);
            Enum = subBuilder;
            break;
          }
          case 146: {
            global::Com.Daml.Ledger.Api.V1.GenMap subBuilder = new global::Com.Daml.Ledger.Api.V1.GenMap();
            if (sumCase_ == SumOneofCase.GenMap) {
              subBuilder.MergeFrom(GenMap);
            }
            input.ReadMessage(subBuilder);
            GenMap = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Com.Daml.Ledger.Api.V1.Record subBuilder = new global::Com.Daml.Ledger.Api.V1.Record();
            if (sumCase_ == SumOneofCase.Record) {
              subBuilder.MergeFrom(Record);
            }
            input.ReadMessage(subBuilder);
            Record = subBuilder;
            break;
          }
          case 18: {
            global::Com.Daml.Ledger.Api.V1.Variant subBuilder = new global::Com.Daml.Ledger.Api.V1.Variant();
            if (sumCase_ == SumOneofCase.Variant) {
              subBuilder.MergeFrom(Variant);
            }
            input.ReadMessage(subBuilder);
            Variant = subBuilder;
            break;
          }
          case 26: {
            ContractId = input.ReadString();
            break;
          }
          case 34: {
            global::Com.Daml.Ledger.Api.V1.List subBuilder = new global::Com.Daml.Ledger.Api.V1.List();
            if (sumCase_ == SumOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 40: {
            Int64 = input.ReadSInt64();
            break;
          }
          case 50: {
            Numeric = input.ReadString();
            break;
          }
          case 66: {
            Text = input.ReadString();
            break;
          }
          case 73: {
            Timestamp = input.ReadSFixed64();
            break;
          }
          case 90: {
            Party = input.ReadString();
            break;
          }
          case 96: {
            Bool = input.ReadBool();
            break;
          }
          case 106: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (sumCase_ == SumOneofCase.Unit) {
              subBuilder.MergeFrom(Unit);
            }
            input.ReadMessage(subBuilder);
            Unit = subBuilder;
            break;
          }
          case 112: {
            Date = input.ReadInt32();
            break;
          }
          case 122: {
            global::Com.Daml.Ledger.Api.V1.Optional subBuilder = new global::Com.Daml.Ledger.Api.V1.Optional();
            if (sumCase_ == SumOneofCase.Optional) {
              subBuilder.MergeFrom(Optional);
            }
            input.ReadMessage(subBuilder);
            Optional = subBuilder;
            break;
          }
          case 130: {
            global::Com.Daml.Ledger.Api.V1.Map subBuilder = new global::Com.Daml.Ledger.Api.V1.Map();
            if (sumCase_ == SumOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 138: {
            global::Com.Daml.Ledger.Api.V1.Enum subBuilder = new global::Com.Daml.Ledger.Api.V1.Enum();
            if (sumCase_ == SumOneofCase.Enum) {
              subBuilder.MergeFrom(Enum);
            }
            input.ReadMessage(subBuilder);
            Enum = subBuilder;
            break;
          }
          case 146: {
            global::Com.Daml.Ledger.Api.V1.GenMap subBuilder = new global::Com.Daml.Ledger.Api.V1.GenMap();
            if (sumCase_ == SumOneofCase.GenMap) {
              subBuilder.MergeFrom(GenMap);
            }
            input.ReadMessage(subBuilder);
            GenMap = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains nested values.
  /// </summary>
  public sealed partial class Record : pb::IMessage<Record>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Record> _parser = new pb::MessageParser<Record>(() => new Record());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Record> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Record() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Record(Record other) : this() {
      recordId_ = other.recordId_ != null ? other.recordId_.Clone() : null;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Record Clone() {
      return new Record(this);
    }

    /// <summary>Field number for the "record_id" field.</summary>
    public const int RecordIdFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Identifier recordId_;
    /// <summary>
    /// Omitted from the transaction stream when verbose streaming is not enabled.
    /// Optional when submitting commands.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Identifier RecordId {
      get { return recordId_; }
      set {
        recordId_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.RecordField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Daml.Ledger.Api.V1.RecordField.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.RecordField> fields_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.RecordField>();
    /// <summary>
    /// The nested values of the record.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.RecordField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Record);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Record other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecordId, other.RecordId)) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recordId_ != null) hash ^= RecordId.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (recordId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordId);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (recordId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordId);
      }
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recordId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordId);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Record other) {
      if (other == null) {
        return;
      }
      if (other.recordId_ != null) {
        if (recordId_ == null) {
          RecordId = new global::Com.Daml.Ledger.Api.V1.Identifier();
        }
        RecordId.MergeFrom(other.RecordId);
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recordId_ == null) {
              RecordId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(RecordId);
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (recordId_ == null) {
              RecordId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(RecordId);
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A named nested value within a record.
  /// </summary>
  public sealed partial class RecordField : pb::IMessage<RecordField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordField> _parser = new pb::MessageParser<RecordField>(() => new RecordField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordField(RecordField other) : this() {
      label_ = other.label_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordField Clone() {
      return new RecordField(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    /// <summary>
    /// When reading a transaction stream, it's omitted if verbose streaming is not enabled.
    /// When submitting a commmand, it's optional:
    ///   - if all keys within a single record are present, the order in which fields appear does not matter. however, each key must appear exactly once.
    ///   - if any of the keys within a single record are omitted, the order of fields MUST match the order of declaration in the Daml template.
    /// Must be a valid NameString
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Com.Daml.Ledger.Api.V1.Value value_;
    /// <summary>
    /// A nested value of a record.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordField other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Com.Daml.Ledger.Api.V1.Value();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Unique identifier of an entity.
  /// </summary>
  public sealed partial class Identifier : pb::IMessage<Identifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      packageId_ = other.packageId_;
      moduleName_ = other.moduleName_;
      entityName_ = other.entityName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "package_id" field.</summary>
    public const int PackageIdFieldNumber = 1;
    private string packageId_ = "";
    /// <summary>
    /// The identifier of the Daml package that contains the entity.
    /// Must be a valid PackageIdString.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageId {
      get { return packageId_; }
      set {
        packageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "module_name" field.</summary>
    public const int ModuleNameFieldNumber = 3;
    private string moduleName_ = "";
    /// <summary>
    /// The dot-separated module name of the identifier.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModuleName {
      get { return moduleName_; }
      set {
        moduleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_name" field.</summary>
    public const int EntityNameFieldNumber = 4;
    private string entityName_ = "";
    /// <summary>
    /// The dot-separated name of the entity (e.g. record, template, ...) within the module.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityName {
      get { return entityName_; }
      set {
        entityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageId != other.PackageId) return false;
      if (ModuleName != other.ModuleName) return false;
      if (EntityName != other.EntityName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageId.Length != 0) hash ^= PackageId.GetHashCode();
      if (ModuleName.Length != 0) hash ^= ModuleName.GetHashCode();
      if (EntityName.Length != 0) hash ^= EntityName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PackageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageId);
      }
      if (ModuleName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModuleName);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntityName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PackageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageId);
      }
      if (ModuleName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModuleName);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntityName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageId);
      }
      if (ModuleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModuleName);
      }
      if (EntityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.PackageId.Length != 0) {
        PackageId = other.PackageId;
      }
      if (other.ModuleName.Length != 0) {
        ModuleName = other.ModuleName;
      }
      if (other.EntityName.Length != 0) {
        EntityName = other.EntityName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageId = input.ReadString();
            break;
          }
          case 26: {
            ModuleName = input.ReadString();
            break;
          }
          case 34: {
            EntityName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PackageId = input.ReadString();
            break;
          }
          case 26: {
            ModuleName = input.ReadString();
            break;
          }
          case 34: {
            EntityName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A value with alternative representations.
  /// </summary>
  public sealed partial class Variant : pb::IMessage<Variant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Variant> _parser = new pb::MessageParser<Variant>(() => new Variant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Variant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variant(Variant other) : this() {
      variantId_ = other.variantId_ != null ? other.variantId_.Clone() : null;
      constructor_ = other.constructor_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variant Clone() {
      return new Variant(this);
    }

    /// <summary>Field number for the "variant_id" field.</summary>
    public const int VariantIdFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Identifier variantId_;
    /// <summary>
    /// Omitted from the transaction stream when verbose streaming is not enabled.
    /// Optional when submitting commands.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Identifier VariantId {
      get { return variantId_; }
      set {
        variantId_ = value;
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 2;
    private string constructor_ = "";
    /// <summary>
    /// Determines which of the Variant's alternatives is encoded in this message.
    /// Must be a valid NameString.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Constructor {
      get { return constructor_; }
      set {
        constructor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::Com.Daml.Ledger.Api.V1.Value value_;
    /// <summary>
    /// The value encoded within the Variant.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Variant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Variant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VariantId, other.VariantId)) return false;
      if (Constructor != other.Constructor) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (variantId_ != null) hash ^= VariantId.GetHashCode();
      if (Constructor.Length != 0) hash ^= Constructor.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (variantId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VariantId);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (variantId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VariantId);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (variantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VariantId);
      }
      if (Constructor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Constructor);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Variant other) {
      if (other == null) {
        return;
      }
      if (other.variantId_ != null) {
        if (variantId_ == null) {
          VariantId = new global::Com.Daml.Ledger.Api.V1.Identifier();
        }
        VariantId.MergeFrom(other.VariantId);
      }
      if (other.Constructor.Length != 0) {
        Constructor = other.Constructor;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Com.Daml.Ledger.Api.V1.Value();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (variantId_ == null) {
              VariantId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(VariantId);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (variantId_ == null) {
              VariantId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(VariantId);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A value with finite set of alternative representations.
  /// </summary>
  public sealed partial class Enum : pb::IMessage<Enum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Enum> _parser = new pb::MessageParser<Enum>(() => new Enum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Enum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enum(Enum other) : this() {
      enumId_ = other.enumId_ != null ? other.enumId_.Clone() : null;
      constructor_ = other.constructor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enum Clone() {
      return new Enum(this);
    }

    /// <summary>Field number for the "enum_id" field.</summary>
    public const int EnumIdFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Identifier enumId_;
    /// <summary>
    /// Omitted from the transaction stream when verbose streaming is not enabled.
    /// Optional when submitting commands.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Identifier EnumId {
      get { return enumId_; }
      set {
        enumId_ = value;
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 2;
    private string constructor_ = "";
    /// <summary>
    /// Determines which of the Variant's alternatives is encoded in this message.
    /// Must be a valid NameString.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Constructor {
      get { return constructor_; }
      set {
        constructor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Enum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Enum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EnumId, other.EnumId)) return false;
      if (Constructor != other.Constructor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (enumId_ != null) hash ^= EnumId.GetHashCode();
      if (Constructor.Length != 0) hash ^= Constructor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (enumId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EnumId);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (enumId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EnumId);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (enumId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnumId);
      }
      if (Constructor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Constructor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Enum other) {
      if (other == null) {
        return;
      }
      if (other.enumId_ != null) {
        if (enumId_ == null) {
          EnumId = new global::Com.Daml.Ledger.Api.V1.Identifier();
        }
        EnumId.MergeFrom(other.EnumId);
      }
      if (other.Constructor.Length != 0) {
        Constructor = other.Constructor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (enumId_ == null) {
              EnumId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(EnumId);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (enumId_ == null) {
              EnumId = new global::Com.Daml.Ledger.Api.V1.Identifier();
            }
            input.ReadMessage(EnumId);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A homogenous collection of values.
  /// </summary>
  public sealed partial class List : pb::IMessage<List>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<List> _parser = new pb::MessageParser<List>(() => new List());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public List(List other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public List Clone() {
      return new List(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.Value> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Daml.Ledger.Api.V1.Value.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Value> elements_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Value>();
    /// <summary>
    /// The elements must all be of the same concrete value type.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Value> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elements_.WriteTo(ref output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(List other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Corresponds to Java's Optional type, Scala's Option, and Haskell's Maybe.
  /// The reason why we need to wrap this in an additional ``message`` is that we
  /// need to be able to encode the ``None`` case in the ``Value`` oneof.
  /// </summary>
  public sealed partial class Optional : pb::IMessage<Optional>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Optional> _parser = new pb::MessageParser<Optional>(() => new Optional());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Optional> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional(Optional other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional Clone() {
      return new Optional(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Value value_;
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Optional);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Optional other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Optional other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Com.Daml.Ledger.Api.V1.Value();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Map : pb::IMessage<Map>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map(Map other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.Map.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Daml.Ledger.Api.V1.Map.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Map.Types.Entry> entries_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Map.Types.Entry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Map.Types.Entry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Map message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Entry : pb::IMessage<Entry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Daml.Ledger.Api.V1.Map.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          key_ = other.key_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Com.Daml.Ledger.Api.V1.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Daml.Ledger.Api.V1.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GenMap : pb::IMessage<GenMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenMap> _parser = new pb::MessageParser<GenMap>(() => new GenMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.ValueReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenMap(GenMap other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenMap Clone() {
      return new GenMap(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry> entries_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.GenMap.Types.Entry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenMap other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GenMap message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Entry : pb::IMessage<Entry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Daml.Ledger.Api.V1.GenMap.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          key_ = other.key_ != null ? other.key_.Clone() : null;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private global::Com.Daml.Ledger.Api.V1.Value key_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Daml.Ledger.Api.V1.Value Key {
          get { return key_; }
          set {
            key_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Com.Daml.Ledger.Api.V1.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Daml.Ledger.Api.V1.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Key, other.Key)) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (key_ != null) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (key_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.key_ != null) {
            if (key_ == null) {
              Key = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            Key.MergeFrom(other.Key);
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Com.Daml.Ledger.Api.V1.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Com.Daml.Ledger.Api.V1.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
