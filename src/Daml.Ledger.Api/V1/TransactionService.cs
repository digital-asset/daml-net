// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com/daml/ledger/api/v1/transaction_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Daml.Ledger.Api.V1 {

  /// <summary>Holder for reflection information generated from com/daml/ledger/api/v1/transaction_service.proto</summary>
  public static partial class TransactionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for com/daml/ledger/api/v1/transaction_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBjb20vZGFtbC9sZWRnZXIvYXBpL3YxL3RyYW5zYWN0aW9uX3NlcnZpY2Uu",
            "cHJvdG8SFmNvbS5kYW1sLmxlZGdlci5hcGkudjEaKmNvbS9kYW1sL2xlZGdl",
            "ci9hcGkvdjEvbGVkZ2VyX29mZnNldC5wcm90bxovY29tL2RhbWwvbGVkZ2Vy",
            "L2FwaS92MS90cmFuc2FjdGlvbl9maWx0ZXIucHJvdG8aKGNvbS9kYW1sL2xl",
            "ZGdlci9hcGkvdjEvdHJhbnNhY3Rpb24ucHJvdG8aKmNvbS9kYW1sL2xlZGdl",
            "ci9hcGkvdjEvdHJhY2VfY29udGV4dC5wcm90byKdAgoWR2V0VHJhbnNhY3Rp",
            "b25zUmVxdWVzdBIRCglsZWRnZXJfaWQYASABKAkSMwoFYmVnaW4YAiABKAsy",
            "JC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLkxlZGdlck9mZnNldBIxCgNlbmQY",
            "AyABKAsyJC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLkxlZGdlck9mZnNldBI5",
            "CgZmaWx0ZXIYBCABKAsyKS5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLlRyYW5z",
            "YWN0aW9uRmlsdGVyEg8KB3ZlcmJvc2UYBSABKAgSPAoNdHJhY2VfY29udGV4",
            "dBjoByABKAsyJC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLlRyYWNlQ29udGV4",
            "dCJUChdHZXRUcmFuc2FjdGlvbnNSZXNwb25zZRI5Cgx0cmFuc2FjdGlvbnMY",
            "ASADKAsyIy5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLlRyYW5zYWN0aW9uIlwK",
            "G0dldFRyYW5zYWN0aW9uVHJlZXNSZXNwb25zZRI9Cgx0cmFuc2FjdGlvbnMY",
            "ASADKAsyJy5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLlRyYW5zYWN0aW9uVHJl",
            "ZSKfAQoeR2V0VHJhbnNhY3Rpb25CeUV2ZW50SWRSZXF1ZXN0EhEKCWxlZGdl",
            "cl9pZBgBIAEoCRIQCghldmVudF9pZBgCIAEoCRIaChJyZXF1ZXN0aW5nX3Bh",
            "cnRpZXMYAyADKAkSPAoNdHJhY2VfY29udGV4dBjoByABKAsyJC5jb20uZGFt",
            "bC5sZWRnZXIuYXBpLnYxLlRyYWNlQ29udGV4dCKgAQoZR2V0VHJhbnNhY3Rp",
            "b25CeUlkUmVxdWVzdBIRCglsZWRnZXJfaWQYASABKAkSFgoOdHJhbnNhY3Rp",
            "b25faWQYAiABKAkSGgoScmVxdWVzdGluZ19wYXJ0aWVzGAMgAygJEjwKDXRy",
            "YWNlX2NvbnRleHQY6AcgASgLMiQuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5U",
            "cmFjZUNvbnRleHQiVgoWR2V0VHJhbnNhY3Rpb25SZXNwb25zZRI8Cgt0cmFu",
            "c2FjdGlvbhgBIAEoCzInLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuVHJhbnNh",
            "Y3Rpb25UcmVlIlYKGkdldEZsYXRUcmFuc2FjdGlvblJlc3BvbnNlEjgKC3Ry",
            "YW5zYWN0aW9uGAEgASgLMiMuY29tLmRhbWwubGVkZ2VyLmFwaS52MS5UcmFu",
            "c2FjdGlvbiJmChNHZXRMZWRnZXJFbmRSZXF1ZXN0EhEKCWxlZGdlcl9pZBgB",
            "IAEoCRI8Cg10cmFjZV9jb250ZXh0GOgHIAEoCzIkLmNvbS5kYW1sLmxlZGdl",
            "ci5hcGkudjEuVHJhY2VDb250ZXh0IkwKFEdldExlZGdlckVuZFJlc3BvbnNl",
            "EjQKBm9mZnNldBgBIAEoCzIkLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuTGVk",
            "Z2VyT2Zmc2V0Mv0GChJUcmFuc2FjdGlvblNlcnZpY2USdAoPR2V0VHJhbnNh",
            "Y3Rpb25zEi4uY29tLmRhbWwubGVkZ2VyLmFwaS52MS5HZXRUcmFuc2FjdGlv",
            "bnNSZXF1ZXN0Gi8uY29tLmRhbWwubGVkZ2VyLmFwaS52MS5HZXRUcmFuc2Fj",
            "dGlvbnNSZXNwb25zZTABEnwKE0dldFRyYW5zYWN0aW9uVHJlZXMSLi5jb20u",
            "ZGFtbC5sZWRnZXIuYXBpLnYxLkdldFRyYW5zYWN0aW9uc1JlcXVlc3QaMy5j",
            "b20uZGFtbC5sZWRnZXIuYXBpLnYxLkdldFRyYW5zYWN0aW9uVHJlZXNSZXNw",
            "b25zZTABEoEBChdHZXRUcmFuc2FjdGlvbkJ5RXZlbnRJZBI2LmNvbS5kYW1s",
            "LmxlZGdlci5hcGkudjEuR2V0VHJhbnNhY3Rpb25CeUV2ZW50SWRSZXF1ZXN0",
            "Gi4uY29tLmRhbWwubGVkZ2VyLmFwaS52MS5HZXRUcmFuc2FjdGlvblJlc3Bv",
            "bnNlEncKEkdldFRyYW5zYWN0aW9uQnlJZBIxLmNvbS5kYW1sLmxlZGdlci5h",
            "cGkudjEuR2V0VHJhbnNhY3Rpb25CeUlkUmVxdWVzdBouLmNvbS5kYW1sLmxl",
            "ZGdlci5hcGkudjEuR2V0VHJhbnNhY3Rpb25SZXNwb25zZRKJAQobR2V0Rmxh",
            "dFRyYW5zYWN0aW9uQnlFdmVudElkEjYuY29tLmRhbWwubGVkZ2VyLmFwaS52",
            "MS5HZXRUcmFuc2FjdGlvbkJ5RXZlbnRJZFJlcXVlc3QaMi5jb20uZGFtbC5s",
            "ZWRnZXIuYXBpLnYxLkdldEZsYXRUcmFuc2FjdGlvblJlc3BvbnNlEn8KFkdl",
            "dEZsYXRUcmFuc2FjdGlvbkJ5SWQSMS5jb20uZGFtbC5sZWRnZXIuYXBpLnYx",
            "LkdldFRyYW5zYWN0aW9uQnlJZFJlcXVlc3QaMi5jb20uZGFtbC5sZWRnZXIu",
            "YXBpLnYxLkdldEZsYXRUcmFuc2FjdGlvblJlc3BvbnNlEmkKDEdldExlZGdl",
            "ckVuZBIrLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuR2V0TGVkZ2VyRW5kUmVx",
            "dWVzdBosLmNvbS5kYW1sLmxlZGdlci5hcGkudjEuR2V0TGVkZ2VyRW5kUmVz",
            "cG9uc2VCTwoWY29tLmRhbWwubGVkZ2VyLmFwaS52MUIcVHJhbnNhY3Rpb25T",
            "ZXJ2aWNlT3V0ZXJDbGFzc6oCFkNvbS5EYW1sLkxlZGdlci5BcGkuVjFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Daml.Ledger.Api.V1.LedgerOffsetReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TransactionFilterReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TransactionReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TraceContextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionsRequest), global::Com.Daml.Ledger.Api.V1.GetTransactionsRequest.Parser, new[]{ "LedgerId", "Begin", "End", "Filter", "Verbose", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionsResponse), global::Com.Daml.Ledger.Api.V1.GetTransactionsResponse.Parser, new[]{ "Transactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionTreesResponse), global::Com.Daml.Ledger.Api.V1.GetTransactionTreesResponse.Parser, new[]{ "Transactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionByEventIdRequest), global::Com.Daml.Ledger.Api.V1.GetTransactionByEventIdRequest.Parser, new[]{ "LedgerId", "EventId", "RequestingParties", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionByIdRequest), global::Com.Daml.Ledger.Api.V1.GetTransactionByIdRequest.Parser, new[]{ "LedgerId", "TransactionId", "RequestingParties", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetTransactionResponse), global::Com.Daml.Ledger.Api.V1.GetTransactionResponse.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetFlatTransactionResponse), global::Com.Daml.Ledger.Api.V1.GetFlatTransactionResponse.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetLedgerEndRequest), global::Com.Daml.Ledger.Api.V1.GetLedgerEndRequest.Parser, new[]{ "LedgerId", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.GetLedgerEndResponse), global::Com.Daml.Ledger.Api.V1.GetLedgerEndResponse.Parser, new[]{ "Offset" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetTransactionsRequest : pb::IMessage<GetTransactionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionsRequest> _parser = new pb::MessageParser<GetTransactionsRequest>(() => new GetTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest(GetTransactionsRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      begin_ = other.begin_ != null ? other.begin_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      verbose_ = other.verbose_;
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest Clone() {
      return new GetTransactionsRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "begin" field.</summary>
    public const int BeginFieldNumber = 2;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset begin_;
    /// <summary>
    /// Beginning of the requested ledger section.
    /// This offset is exclusive: the response will only contain transactions whose offset is strictly greater than this.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset Begin {
      get { return begin_; }
      set {
        begin_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset end_;
    /// <summary>
    /// End of the requested ledger section.
    /// This offset is inclusive: the response will only contain transactions whose offset is less than or equal to this.
    /// Optional, if not set, the stream will not terminate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private global::Com.Daml.Ledger.Api.V1.TransactionFilter filter_;
    /// <summary>
    /// Requesting parties with template filters.
    /// Template filters must be empty for GetTransactionTrees requests.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TransactionFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "verbose" field.</summary>
    public const int VerboseFieldNumber = 5;
    private bool verbose_;
    /// <summary>
    /// If enabled, values served over the API will contain more information than strictly necessary to interpret the data.
    /// In particular, setting the verbose flag to true triggers the ledger to include labels for record fields.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Verbose {
      get { return verbose_; }
      set {
        verbose_ = value;
      }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (!object.Equals(Begin, other.Begin)) return false;
      if (!object.Equals(End, other.End)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (Verbose != other.Verbose) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (begin_ != null) hash ^= Begin.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (Verbose != false) hash ^= Verbose.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (begin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Begin);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (Verbose != false) {
        output.WriteRawTag(40);
        output.WriteBool(Verbose);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (begin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Begin);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (Verbose != false) {
        output.WriteRawTag(40);
        output.WriteBool(Verbose);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (begin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Begin);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (Verbose != false) {
        size += 1 + 1;
      }
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.begin_ != null) {
        if (begin_ == null) {
          Begin = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        Begin.MergeFrom(other.Begin);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        End.MergeFrom(other.End);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.Verbose != false) {
        Verbose = other.Verbose;
      }
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            if (begin_ == null) {
              Begin = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Begin);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            if (filter_ == null) {
              Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 40: {
            Verbose = input.ReadBool();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            if (begin_ == null) {
              Begin = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Begin);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            if (filter_ == null) {
              Filter = new global::Com.Daml.Ledger.Api.V1.TransactionFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 40: {
            Verbose = input.ReadBool();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionsResponse : pb::IMessage<GetTransactionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionsResponse> _parser = new pb::MessageParser<GetTransactionsResponse>(() => new GetTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse(GetTransactionsResponse other) : this() {
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse Clone() {
      return new GetTransactionsResponse(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Daml.Ledger.Api.V1.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Transaction> transactions_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Transaction>();
    /// <summary>
    /// The list of transactions that matches the filter in GetTransactionsRequest for the GetTransactions method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      transactions_.WriteTo(ref output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionsResponse other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(ref input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionTreesResponse : pb::IMessage<GetTransactionTreesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionTreesResponse> _parser = new pb::MessageParser<GetTransactionTreesResponse>(() => new GetTransactionTreesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionTreesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionTreesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionTreesResponse(GetTransactionTreesResponse other) : this() {
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionTreesResponse Clone() {
      return new GetTransactionTreesResponse(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.TransactionTree> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Daml.Ledger.Api.V1.TransactionTree.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.TransactionTree> transactions_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.TransactionTree>();
    /// <summary>
    /// The list of transaction trees that matches the filter in ``GetTransactionsRequest`` for the ``GetTransactionTrees`` method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.TransactionTree> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionTreesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionTreesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      transactions_.WriteTo(ref output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionTreesResponse other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(ref input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionByEventIdRequest : pb::IMessage<GetTransactionByEventIdRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionByEventIdRequest> _parser = new pb::MessageParser<GetTransactionByEventIdRequest>(() => new GetTransactionByEventIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionByEventIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByEventIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByEventIdRequest(GetTransactionByEventIdRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      eventId_ = other.eventId_;
      requestingParties_ = other.requestingParties_.Clone();
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByEventIdRequest Clone() {
      return new GetTransactionByEventIdRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private string eventId_ = "";
    /// <summary>
    /// The ID of a particular event.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requesting_parties" field.</summary>
    public const int RequestingPartiesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_requestingParties_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> requestingParties_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The parties whose events the client expects to see.
    /// Events that are not visible for the parties in this collection will not be present in the response.
    /// Each element must be a valid PartyIdString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequestingParties {
      get { return requestingParties_; }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionByEventIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionByEventIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (EventId != other.EventId) return false;
      if(!requestingParties_.Equals(other.requestingParties_)) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      hash ^= requestingParties_.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      requestingParties_.WriteTo(output, _repeated_requestingParties_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      requestingParties_.WriteTo(ref output, _repeated_requestingParties_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      size += requestingParties_.CalculateSize(_repeated_requestingParties_codec);
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionByEventIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      requestingParties_.Add(other.requestingParties_);
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 26: {
            requestingParties_.AddEntriesFrom(input, _repeated_requestingParties_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 26: {
            requestingParties_.AddEntriesFrom(ref input, _repeated_requestingParties_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionByIdRequest : pb::IMessage<GetTransactionByIdRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionByIdRequest> _parser = new pb::MessageParser<GetTransactionByIdRequest>(() => new GetTransactionByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByIdRequest(GetTransactionByIdRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      transactionId_ = other.transactionId_;
      requestingParties_ = other.requestingParties_.Clone();
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionByIdRequest Clone() {
      return new GetTransactionByIdRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as describe in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 2;
    private string transactionId_ = "";
    /// <summary>
    /// The ID of a particular transaction.
    /// Must be a valid LedgerString (as describe in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requesting_parties" field.</summary>
    public const int RequestingPartiesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_requestingParties_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> requestingParties_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The parties whose events the client expects to see.
    /// Events that are not visible for the parties in this collection will not be present in the response.
    /// Each element be a valid PartyIdString (as describe in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequestingParties {
      get { return requestingParties_; }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (TransactionId != other.TransactionId) return false;
      if(!requestingParties_.Equals(other.requestingParties_)) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      hash ^= requestingParties_.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (TransactionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TransactionId);
      }
      requestingParties_.WriteTo(output, _repeated_requestingParties_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (TransactionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TransactionId);
      }
      requestingParties_.WriteTo(ref output, _repeated_requestingParties_codec);
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      size += requestingParties_.CalculateSize(_repeated_requestingParties_codec);
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      requestingParties_.Add(other.requestingParties_);
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadString();
            break;
          }
          case 26: {
            requestingParties_.AddEntriesFrom(input, _repeated_requestingParties_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadString();
            break;
          }
          case 26: {
            requestingParties_.AddEntriesFrom(ref input, _repeated_requestingParties_codec);
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionResponse : pb::IMessage<GetTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionResponse> _parser = new pb::MessageParser<GetTransactionResponse>(() => new GetTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse(GetTransactionResponse other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse Clone() {
      return new GetTransactionResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.TransactionTree transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TransactionTree Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Com.Daml.Ledger.Api.V1.TransactionTree();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Com.Daml.Ledger.Api.V1.TransactionTree();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Com.Daml.Ledger.Api.V1.TransactionTree();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetFlatTransactionResponse : pb::IMessage<GetFlatTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetFlatTransactionResponse> _parser = new pb::MessageParser<GetFlatTransactionResponse>(() => new GetFlatTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFlatTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlatTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlatTransactionResponse(GetFlatTransactionResponse other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlatTransactionResponse Clone() {
      return new GetFlatTransactionResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFlatTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFlatTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFlatTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Com.Daml.Ledger.Api.V1.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Com.Daml.Ledger.Api.V1.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Com.Daml.Ledger.Api.V1.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetLedgerEndRequest : pb::IMessage<GetLedgerEndRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLedgerEndRequest> _parser = new pb::MessageParser<GetLedgerEndRequest>(() => new GetLedgerEndRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLedgerEndRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndRequest(GetLedgerEndRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndRequest Clone() {
      return new GetLedgerEndRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as describe in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLedgerEndRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLedgerEndRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLedgerEndRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetLedgerEndResponse : pb::IMessage<GetLedgerEndResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLedgerEndResponse> _parser = new pb::MessageParser<GetLedgerEndResponse>(() => new GetLedgerEndResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLedgerEndResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.TransactionServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndResponse(GetLedgerEndResponse other) : this() {
      offset_ = other.offset_ != null ? other.offset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLedgerEndResponse Clone() {
      return new GetLedgerEndResponse(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset offset_;
    /// <summary>
    /// The absolute offset of the current ledger end.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLedgerEndResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLedgerEndResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Offset, other.Offset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (offset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (offset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLedgerEndResponse other) {
      if (other == null) {
        return;
      }
      if (other.offset_ != null) {
        if (offset_ == null) {
          Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        Offset.MergeFrom(other.Offset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
