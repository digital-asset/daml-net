// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com/daml/ledger/api/v1/command_completion_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Daml.Ledger.Api.V1 {

  /// <summary>Holder for reflection information generated from com/daml/ledger/api/v1/command_completion_service.proto</summary>
  public static partial class CommandCompletionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for com/daml/ledger/api/v1/command_completion_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandCompletionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdjb20vZGFtbC9sZWRnZXIvYXBpL3YxL2NvbW1hbmRfY29tcGxldGlvbl9z",
            "ZXJ2aWNlLnByb3RvEhZjb20uZGFtbC5sZWRnZXIuYXBpLnYxGidjb20vZGFt",
            "bC9sZWRnZXIvYXBpL3YxL2NvbXBsZXRpb24ucHJvdG8aKmNvbS9kYW1sL2xl",
            "ZGdlci9hcGkvdjEvbGVkZ2VyX29mZnNldC5wcm90bxoqY29tL2RhbWwvbGVk",
            "Z2VyL2FwaS92MS90cmFjZV9jb250ZXh0LnByb3RvGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvIosBChdDb21wbGV0aW9uU3RyZWFtUmVxdWVz",
            "dBIRCglsZWRnZXJfaWQYASABKAkSFgoOYXBwbGljYXRpb25faWQYAiABKAkS",
            "DwoHcGFydGllcxgDIAMoCRI0CgZvZmZzZXQYBCABKAsyJC5jb20uZGFtbC5s",
            "ZWRnZXIuYXBpLnYxLkxlZGdlck9mZnNldCKLAQoYQ29tcGxldGlvblN0cmVh",
            "bVJlc3BvbnNlEjYKCmNoZWNrcG9pbnQYASABKAsyIi5jb20uZGFtbC5sZWRn",
            "ZXIuYXBpLnYxLkNoZWNrcG9pbnQSNwoLY29tcGxldGlvbnMYAiADKAsyIi5j",
            "b20uZGFtbC5sZWRnZXIuYXBpLnYxLkNvbXBsZXRpb24icwoKQ2hlY2twb2lu",
            "dBIvCgtyZWNvcmRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASNAoGb2Zmc2V0GAIgASgLMiQuY29tLmRhbWwubGVkZ2VyLmFwaS52",
            "MS5MZWRnZXJPZmZzZXQiZwoUQ29tcGxldGlvbkVuZFJlcXVlc3QSEQoJbGVk",
            "Z2VyX2lkGAEgASgJEjwKDXRyYWNlX2NvbnRleHQY6AcgASgLMiQuY29tLmRh",
            "bWwubGVkZ2VyLmFwaS52MS5UcmFjZUNvbnRleHQiTQoVQ29tcGxldGlvbkVu",
            "ZFJlc3BvbnNlEjQKBm9mZnNldBgBIAEoCzIkLmNvbS5kYW1sLmxlZGdlci5h",
            "cGkudjEuTGVkZ2VyT2Zmc2V0MoECChhDb21tYW5kQ29tcGxldGlvblNlcnZp",
            "Y2USdwoQQ29tcGxldGlvblN0cmVhbRIvLmNvbS5kYW1sLmxlZGdlci5hcGku",
            "djEuQ29tcGxldGlvblN0cmVhbVJlcXVlc3QaMC5jb20uZGFtbC5sZWRnZXIu",
            "YXBpLnYxLkNvbXBsZXRpb25TdHJlYW1SZXNwb25zZTABEmwKDUNvbXBsZXRp",
            "b25FbmQSLC5jb20uZGFtbC5sZWRnZXIuYXBpLnYxLkNvbXBsZXRpb25FbmRS",
            "ZXF1ZXN0Gi0uY29tLmRhbWwubGVkZ2VyLmFwaS52MS5Db21wbGV0aW9uRW5k",
            "UmVzcG9uc2VCVQoWY29tLmRhbWwubGVkZ2VyLmFwaS52MUIiQ29tbWFuZENv",
            "bXBsZXRpb25TZXJ2aWNlT3V0ZXJDbGFzc6oCFkNvbS5EYW1sLkxlZGdlci5B",
            "cGkuVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Daml.Ledger.Api.V1.CompletionReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.LedgerOffsetReflection.Descriptor, global::Com.Daml.Ledger.Api.V1.TraceContextReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.CompletionStreamRequest), global::Com.Daml.Ledger.Api.V1.CompletionStreamRequest.Parser, new[]{ "LedgerId", "ApplicationId", "Parties", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.CompletionStreamResponse), global::Com.Daml.Ledger.Api.V1.CompletionStreamResponse.Parser, new[]{ "Checkpoint", "Completions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.Checkpoint), global::Com.Daml.Ledger.Api.V1.Checkpoint.Parser, new[]{ "RecordTime", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.CompletionEndRequest), global::Com.Daml.Ledger.Api.V1.CompletionEndRequest.Parser, new[]{ "LedgerId", "TraceContext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Daml.Ledger.Api.V1.CompletionEndResponse), global::Com.Daml.Ledger.Api.V1.CompletionEndResponse.Parser, new[]{ "Offset" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CompletionStreamRequest : pb::IMessage<CompletionStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompletionStreamRequest> _parser = new pb::MessageParser<CompletionStreamRequest>(() => new CompletionStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletionStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.CommandCompletionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamRequest(CompletionStreamRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      applicationId_ = other.applicationId_;
      parties_ = other.parties_.Clone();
      offset_ = other.offset_ != null ? other.offset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamRequest Clone() {
      return new CompletionStreamRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger id reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private string applicationId_ = "";
    /// <summary>
    /// Only completions of commands submitted with the same application_id will be visible in the stream.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parties" field.</summary>
    public const int PartiesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_parties_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> parties_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Non-empty list of parties whose data should be included.
    /// Only completions of commands for which at least one of the ``act_as`` parties is in the given set of parties
    /// will be visible in the stream.
    /// Must be a valid PartyIdString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Parties {
      get { return parties_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 4;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset offset_;
    /// <summary>
    /// This field indicates the minimum offset for completions. This can be used to resume an earlier completion stream.
    /// This offset is exclusive: the response will only contain commands whose offset is strictly greater than this.
    /// Optional, if not set the ledger uses the current ledger end offset instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletionStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletionStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if(!parties_.Equals(other.parties_)) return false;
      if (!object.Equals(Offset, other.Offset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (ApplicationId.Length != 0) hash ^= ApplicationId.GetHashCode();
      hash ^= parties_.GetHashCode();
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationId);
      }
      parties_.WriteTo(output, _repeated_parties_codec);
      if (offset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationId);
      }
      parties_.WriteTo(ref output, _repeated_parties_codec);
      if (offset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (ApplicationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationId);
      }
      size += parties_.CalculateSize(_repeated_parties_codec);
      if (offset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletionStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.ApplicationId.Length != 0) {
        ApplicationId = other.ApplicationId;
      }
      parties_.Add(other.parties_);
      if (other.offset_ != null) {
        if (offset_ == null) {
          Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        Offset.MergeFrom(other.Offset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            ApplicationId = input.ReadString();
            break;
          }
          case 26: {
            parties_.AddEntriesFrom(input, _repeated_parties_codec);
            break;
          }
          case 34: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 18: {
            ApplicationId = input.ReadString();
            break;
          }
          case 26: {
            parties_.AddEntriesFrom(ref input, _repeated_parties_codec);
            break;
          }
          case 34: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CompletionStreamResponse : pb::IMessage<CompletionStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompletionStreamResponse> _parser = new pb::MessageParser<CompletionStreamResponse>(() => new CompletionStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletionStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.CommandCompletionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamResponse(CompletionStreamResponse other) : this() {
      checkpoint_ = other.checkpoint_ != null ? other.checkpoint_.Clone() : null;
      completions_ = other.completions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionStreamResponse Clone() {
      return new CompletionStreamResponse(this);
    }

    /// <summary>Field number for the "checkpoint" field.</summary>
    public const int CheckpointFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.Checkpoint checkpoint_;
    /// <summary>
    /// This checkpoint may be used to restart consumption.  The
    /// checkpoint is after any completions in this response.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.Checkpoint Checkpoint {
      get { return checkpoint_; }
      set {
        checkpoint_ = value;
      }
    }

    /// <summary>Field number for the "completions" field.</summary>
    public const int CompletionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Daml.Ledger.Api.V1.Completion> _repeated_completions_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Daml.Ledger.Api.V1.Completion.Parser);
    private readonly pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Completion> completions_ = new pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Completion>();
    /// <summary>
    /// If set, one or more completions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Daml.Ledger.Api.V1.Completion> Completions {
      get { return completions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletionStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletionStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Checkpoint, other.Checkpoint)) return false;
      if(!completions_.Equals(other.completions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (checkpoint_ != null) hash ^= Checkpoint.GetHashCode();
      hash ^= completions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (checkpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Checkpoint);
      }
      completions_.WriteTo(output, _repeated_completions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (checkpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Checkpoint);
      }
      completions_.WriteTo(ref output, _repeated_completions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (checkpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Checkpoint);
      }
      size += completions_.CalculateSize(_repeated_completions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletionStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.checkpoint_ != null) {
        if (checkpoint_ == null) {
          Checkpoint = new global::Com.Daml.Ledger.Api.V1.Checkpoint();
        }
        Checkpoint.MergeFrom(other.Checkpoint);
      }
      completions_.Add(other.completions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (checkpoint_ == null) {
              Checkpoint = new global::Com.Daml.Ledger.Api.V1.Checkpoint();
            }
            input.ReadMessage(Checkpoint);
            break;
          }
          case 18: {
            completions_.AddEntriesFrom(input, _repeated_completions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (checkpoint_ == null) {
              Checkpoint = new global::Com.Daml.Ledger.Api.V1.Checkpoint();
            }
            input.ReadMessage(Checkpoint);
            break;
          }
          case 18: {
            completions_.AddEntriesFrom(ref input, _repeated_completions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Checkpoints may be used to:
  ///
  /// * detect time out of commands.
  /// * provide an offset which can be used to restart consumption.
  /// </summary>
  public sealed partial class Checkpoint : pb::IMessage<Checkpoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Checkpoint> _parser = new pb::MessageParser<Checkpoint>(() => new Checkpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Checkpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.CommandCompletionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Checkpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Checkpoint(Checkpoint other) : this() {
      recordTime_ = other.recordTime_ != null ? other.recordTime_.Clone() : null;
      offset_ = other.offset_ != null ? other.offset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Checkpoint Clone() {
      return new Checkpoint(this);
    }

    /// <summary>Field number for the "record_time" field.</summary>
    public const int RecordTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp recordTime_;
    /// <summary>
    /// All commands with a maximum record time below this value MUST be considered lost if their completion has not arrived before this checkpoint.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RecordTime {
      get { return recordTime_; }
      set {
        recordTime_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset offset_;
    /// <summary>
    /// May be used in a subsequent CompletionStreamRequest to resume the consumption of this stream at a later time.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Checkpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Checkpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecordTime, other.RecordTime)) return false;
      if (!object.Equals(Offset, other.Offset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recordTime_ != null) hash ^= RecordTime.GetHashCode();
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (recordTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordTime);
      }
      if (offset_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (recordTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordTime);
      }
      if (offset_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recordTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordTime);
      }
      if (offset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Checkpoint other) {
      if (other == null) {
        return;
      }
      if (other.recordTime_ != null) {
        if (recordTime_ == null) {
          RecordTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RecordTime.MergeFrom(other.RecordTime);
      }
      if (other.offset_ != null) {
        if (offset_ == null) {
          Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        Offset.MergeFrom(other.Offset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recordTime_ == null) {
              RecordTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RecordTime);
            break;
          }
          case 18: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (recordTime_ == null) {
              RecordTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RecordTime);
            break;
          }
          case 18: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CompletionEndRequest : pb::IMessage<CompletionEndRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompletionEndRequest> _parser = new pb::MessageParser<CompletionEndRequest>(() => new CompletionEndRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletionEndRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.CommandCompletionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndRequest(CompletionEndRequest other) : this() {
      ledgerId_ = other.ledgerId_;
      traceContext_ = other.traceContext_ != null ? other.traceContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndRequest Clone() {
      return new CompletionEndRequest(this);
    }

    /// <summary>Field number for the "ledger_id" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private string ledgerId_ = "";
    /// <summary>
    /// Must correspond to the ledger ID reported by the Ledger Identification Service.
    /// Must be a valid LedgerString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trace_context" field.</summary>
    public const int TraceContextFieldNumber = 1000;
    private global::Com.Daml.Ledger.Api.V1.TraceContext traceContext_;
    /// <summary>
    /// Server side tracing will be registered as a child of the submitted context.
    /// This field is a future extension point and is currently not supported.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.TraceContext TraceContext {
      get { return traceContext_; }
      set {
        traceContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletionEndRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletionEndRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (!object.Equals(TraceContext, other.TraceContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId.Length != 0) hash ^= LedgerId.GetHashCode();
      if (traceContext_ != null) hash ^= TraceContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LedgerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LedgerId);
      }
      if (traceContext_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(TraceContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LedgerId);
      }
      if (traceContext_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TraceContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletionEndRequest other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId.Length != 0) {
        LedgerId = other.LedgerId;
      }
      if (other.traceContext_ != null) {
        if (traceContext_ == null) {
          TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
        }
        TraceContext.MergeFrom(other.TraceContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LedgerId = input.ReadString();
            break;
          }
          case 8002: {
            if (traceContext_ == null) {
              TraceContext = new global::Com.Daml.Ledger.Api.V1.TraceContext();
            }
            input.ReadMessage(TraceContext);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CompletionEndResponse : pb::IMessage<CompletionEndResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompletionEndResponse> _parser = new pb::MessageParser<CompletionEndResponse>(() => new CompletionEndResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletionEndResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Daml.Ledger.Api.V1.CommandCompletionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndResponse(CompletionEndResponse other) : this() {
      offset_ = other.offset_ != null ? other.offset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletionEndResponse Clone() {
      return new CompletionEndResponse(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private global::Com.Daml.Ledger.Api.V1.LedgerOffset offset_;
    /// <summary>
    /// This offset can be used in a CompletionStreamRequest message.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Daml.Ledger.Api.V1.LedgerOffset Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletionEndResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletionEndResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Offset, other.Offset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (offset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (offset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletionEndResponse other) {
      if (other == null) {
        return;
      }
      if (other.offset_ != null) {
        if (offset_ == null) {
          Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
        }
        Offset.MergeFrom(other.Offset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (offset_ == null) {
              Offset = new global::Com.Daml.Ledger.Api.V1.LedgerOffset();
            }
            input.ReadMessage(Offset);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
